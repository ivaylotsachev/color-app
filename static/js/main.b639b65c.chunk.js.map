{"version":3,"sources":["styles/bg.svg","styles/sizes.js","styles/ColorBoxStyles.js","components/ColorBox.js","styles/NavbarStyles.js","components/Navbar.js","components/PaletteFooter.js","styles/PaletteFooterStyles.js","styles/PaletteStyles.js","components/Palette.js","styles/MiniPaletteStyles.js","components/MiniPalette.js","styles/PaletteListStyles.js","components/PaletteList.js","components/SingleColorPalette.js","components/PaletteMetaForm.js","styles/PaletteFormNavStyles.js","constants.js","components/PaletteFormNav.js","styles/DraggableColorBoxStyles.js","components/DraggableColorBox.js","components/DraggableColorList.js","components/ColorPickerForm.js","styles/ColorPickerFormStyles.js","styles/NewPaletteFormStyles.js","components/NewPaletteForm.js","seedColors.js","colorHelpers.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","size","xs","sm","md","lg","xl","ColorBox","width","height","props","showingFullPalette","margin","display","position","cursor","marginBottom","opacity","sizes","copyText","color","chroma","background","luminance","colorName","seeMore","border","right","bottom","textAlign","lineHeight","textTransform","copyButton","top","left","marginLeft","marginTop","outline","fontSize","textDecoration","boxContent","padding","letterSpacing","copyOverlay","zIndex","transition","transform","showOverlay","copyMessage","alignItems","justifyContent","flexDirection","fontWeight","textShadow","showMessage","transitionDelay","state","copied","changeCopyState","bind","this","setState","setTimeout","name","moreUrl","classes","text","onCopy","style","className","classNames","to","onClick","e","stopPropagation","Component","withStyles","styles","Navbar","logo","marginRight","backgroundColor","fontFamily","slider","boxShadow","selectContainer","format","open","handleFormatChange","closeSnackbar","target","value","handleChange","level","changeLevel","showingAllColors","defaultValue","min","max","step","onAfterChange","Select","onChange","MenuItem","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","id","toUpperCase","ContentProps","onClose","action","IconButton","key","aria-label","PaletteFooter","emoji","paletteName","Palette","overflow","colors","goBack","changeFormat","palette","colorBoxes","map","i","paletteId","root","borderRadius","title","paddingTop","miniColor","delete","deleteIcon","MiniPalette","deletePalette","event","handleClick","miniColorBoxes","backgroundImage","bg","heading","container","flexWrap","nav","palettes","boxSizing","gridTemplateColumns","gridGap","PaletteList","goToPalette","history","push","reverse","SingleColorPalette","_shades","gatherShades","colorId","colorToFilterBy","shades","allColors","concat","filter","slice","val","PaletteMetaForm","showEmojiPicker","stage","savePalette","newPalette","newPaletteName","native","handleSubmit","handleClickOpen","handleClose","ValidatorForm","addValidationRule","every","toLowerCase","hideForm","Dialog","DialogTitle","onSelect","aria-labelledby","onSubmit","DialogContent","DialogContentText","label","fullWidth","validators","errorMessages","DialogActions","Button","variant","type","theme","hide","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","navBtns","button","PaletteFormNav","showForm","formShowing","CssBaseline","AppBar","clsx","Toolbar","handleDrawerOpen","edge","Typography","noWrap","withTheme","DraggableColorBox","SortableElement","DraggableColorList","SortableContainer","removeColor","index","ColorPickerForm","updateCurrentColor","newColor","currentColor","hex","newColorName","addNewColor","hasName","hasColor","paletteIsFull","picker","onChangeComplete","onError","errors","console","log","ref","colorNameInput","placeholder","addColor","disabled","drawer","flexShrink","drawerPaper","drawerHeader","spacing","mixins","toolbar","content","flexGrow","contentShift","buttons","NewPaletteForm","handleDrawerClose","clearColors","addRandomColor","p","flat","randomColor","Math","floor","random","length","replace","onSortEnd","oldIndex","newIndex","arrayMove","maxColors","Drawer","anchor","paper","Divider","gutterBottom","axis","defaultProps","levels","generatePalette","starterPalette","hexColor","numberOfColors","scale","darken","getRange","mode","rgb","css","rgba","App","findPalette","find","st","syncLocalStorage","window","localStorage","setItem","JSON","stringify","savedPalettes","parse","getItem","seedColors","exact","path","render","routeProps","match","params","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b639b65c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.77428cd4.svg\";","export default {\r\n    up() {},\r\n    down(size) {\r\n        const sizes = {\r\n            xs: '575.98px',\r\n            sm: '767.98px',\r\n            md: '991.98px',\r\n            lg: '1199.98px',\r\n            xl: '1600px'\r\n        };\r\n        return `@media (max-width: ${sizes[size]})`;\r\n    }\r\n};\r\n","import chroma from 'chroma-js';\r\nimport sizes from './sizes';\r\nexport default {\r\n    ColorBox: {\r\n        width: '20%',\r\n        height: props => (props.showingFullPalette ? '25%' : '50%'),\r\n        margin: '0 auto',\r\n        display: 'inline-block',\r\n        position: 'relative',\r\n        cursor: 'pointer',\r\n        marginBottom: '-3.5px',\r\n        '&:hover button': {\r\n            opacity: 1\r\n        },\r\n        [sizes.down('lg')]: {\r\n            width: '25%',\r\n            height: props => (props.showingFullPalette ? '20%' : '33.3333%')\r\n        },\r\n        [sizes.down('md')]: {\r\n            width: '50%',\r\n            height: props => (props.showingFullPalette ? '10%' : '20%')\r\n        },\r\n        [sizes.down('xs')]: {\r\n            width: '100%',\r\n            height: props => (props.showingFullPalette ? '10%' : '15%')\r\n        }\r\n    },\r\n    copyText: {\r\n        color: props =>\r\n            chroma(props.background).luminance() >= 0.7 ? 'black' : 'white'\r\n    },\r\n    colorName: {\r\n        color: props =>\r\n            chroma(props.background).luminance() <= 0.08 ? 'white' : 'black'\r\n    },\r\n    seeMore: {\r\n        color: props =>\r\n            chroma(props.background).luminance() >= 0.7\r\n                ? 'rgba(0,0,0,0.6)'\r\n                : 'white',\r\n        background: 'rgba(255, 255, 255, 0.3)',\r\n        position: 'absolute',\r\n        border: 'none',\r\n        right: '0px',\r\n        bottom: '0px',\r\n        width: '60px',\r\n        height: '30px',\r\n        textAlign: 'center',\r\n        lineHeight: '30px',\r\n        textTransform: 'uppercase'\r\n    },\r\n    copyButton: {\r\n        color: props =>\r\n            chroma(props.background).luminance() >= 0.7\r\n                ? 'rgba(0,0,0,0.6)'\r\n                : 'white',\r\n        width: '100px',\r\n        height: '30px',\r\n        position: 'absolute',\r\n        display: 'inline-block',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginLeft: '-50px',\r\n        marginTop: '-15px',\r\n        textAlign: 'center',\r\n        outline: 'none',\r\n        background: 'rgba(255, 255, 255, 0.3)',\r\n        fontSize: '1rem',\r\n        lineHeight: '30px',\r\n        textTransform: 'uppercase',\r\n        border: 'none',\r\n        textDecoration: 'none',\r\n        opacity: 0\r\n    },\r\n    boxContent: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        left: '0px',\r\n        bottom: '0px',\r\n        padding: '10px',\r\n        color: 'black',\r\n        letterSpacing: '1px',\r\n        textTransform: 'uppercase',\r\n        fontSize: '12px'\r\n    },\r\n    copyOverlay: {\r\n        opacity: '0',\r\n        zIndex: '0',\r\n        width: '100%',\r\n        height: '100%',\r\n        transition: 'transform 0.6s ease-in-out',\r\n        transform: 'scale(0.1)'\r\n    },\r\n    showOverlay: {\r\n        opacity: '1',\r\n        transform: 'scale(50)',\r\n        zIndex: '10',\r\n        position: 'absolute'\r\n    },\r\n    copyMessage: {\r\n        position: 'fixed',\r\n        left: '0',\r\n        right: '0',\r\n        top: '0',\r\n        bottom: '0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        fontSize: '4rem',\r\n        transform: 'scale(0.1)',\r\n        opacity: '0',\r\n        color: 'white',\r\n        '& h1': {\r\n            fontWeight: '400',\r\n            textShadow: '1px 2px black',\r\n            background: 'rgba(255, 255, 255, 0.2)',\r\n            width: '100%',\r\n            textAlign: 'center',\r\n            marginBottom: '0',\r\n            padding: '1rem',\r\n            textTransform: 'uppercase',\r\n            [sizes.down('xs')]: {\r\n                fontSize: '6rem'\r\n            }\r\n        },\r\n        '& p': {\r\n            fontSize: '2rem',\r\n            fontWeight: '100'\r\n        }\r\n    },\r\n    showMessage: {\r\n        opacity: '1',\r\n        transform: 'scale(1)',\r\n        zIndex: '25',\r\n        transition: 'all 0.4s ease-in-out',\r\n        transitionDelay: '0.3s'\r\n    }\r\n};\r\n","import React, { Component } from 'react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport styles from '../styles/ColorBoxStyles';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nclass ColorBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { copied: false };\r\n        this.changeCopyState = this.changeCopyState.bind(this);\r\n    }\r\n    changeCopyState() {\r\n        this.setState({ copied: true }, () => {\r\n            setTimeout(() => this.setState({ copied: false }), 1500);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            name,\r\n            background,\r\n            moreUrl,\r\n            showingFullPalette,\r\n            classes\r\n        } = this.props;\r\n\r\n        const { copied } = this.state;\r\n        return (\r\n            <CopyToClipboard text={background} onCopy={this.changeCopyState}>\r\n                <div style={{ background }} className={classes.ColorBox}>\r\n                    <div\r\n                        style={{ background }}\r\n                        className={classNames(classes.copyOverlay, {\r\n                            [classes.showOverlay]: copied\r\n                        })}\r\n                    />\r\n\r\n                    <div\r\n                        className={classNames(classes.copyMessage, {\r\n                            [classes.showMessage]: copied\r\n                        })}\r\n                    >\r\n                        <h1>copied!</h1>\r\n                        <p className={classes.copyText}>{background}</p>\r\n                    </div>\r\n                    <div>\r\n                        <div className={classes.boxContent}>\r\n                            <span className={classes.colorName}>{name}</span>\r\n                        </div>\r\n                        <button className={classes.copyButton}>Copy</button>\r\n                    </div>\r\n                    {showingFullPalette && (\r\n                        <Link to={moreUrl} onClick={e => e.stopPropagation()}>\r\n                            <span className={classes.seeMore}>MORE</span>\r\n                        </Link>\r\n                    )}\r\n                </div>\r\n            </CopyToClipboard>\r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles)(ColorBox);\r\n","import sizes from './sizes';\r\n\r\nexport default {\r\n    Navbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        height: '6vh'\r\n    },\r\n    logo: {\r\n        marginRight: '15px',\r\n        padding: '0 13px',\r\n        fontSize: '22px',\r\n        backgroundColor: '#eceff1',\r\n        fontFamily: 'Roboto',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '& a': {\r\n            textDecoration: 'none',\r\n            color: 'black'\r\n        },\r\n        [sizes.down('xs')]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    slider: {\r\n        width: '340px',\r\n        margin: '0 10px',\r\n        display: 'inline-block',\r\n        '& .rc-slider-track': {\r\n            backgroundColor: 'transparent'\r\n        },\r\n        '& .rc-slider-rail': {\r\n            height: '8px'\r\n        },\r\n        '& .rc-slider-handle, .rc-slider-handle:active, .rc-slider-handle:focus,.rc-slider-handle:hover': {\r\n            backgroundColor: 'green',\r\n            outline: 'none',\r\n            border: '2px solid green',\r\n            boxShadow: 'none',\r\n            width: '13px',\r\n            height: '13px',\r\n            marginLeft: '-7px',\r\n            marginTop: '-3px'\r\n        },\r\n        [sizes.down('sm')]: {\r\n            width: '150px'\r\n        }\r\n    },\r\n    selectContainer: {\r\n        marginLeft: 'auto',\r\n        marginRight: '1rem'\r\n    }\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport styles from '../styles/NavbarStyles';\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { format: 'hex', open: false };\r\n        this.handleFormatChange = this.handleFormatChange.bind(this);\r\n        this.closeSnackbar = this.closeSnackbar.bind(this);\r\n    }\r\n    handleFormatChange(e) {\r\n        this.setState({ format: e.target.value, open: true });\r\n        this.props.handleChange(e.target.value);\r\n    }\r\n    closeSnackbar() {\r\n        this.setState({ open: false });\r\n    }\r\n    render() {\r\n        const { level, changeLevel, showingAllColors, classes } = this.props;\r\n        const { format } = this.state;\r\n        return (\r\n            <header className={classes.Navbar}>\r\n                <div className={classes.logo}>\r\n                    <Link to=\"/\">colorpicker</Link>\r\n                </div>\r\n                {showingAllColors && (\r\n                    <div>\r\n                        <span>Level: {level}</span>\r\n                        <div className={classes.slider}>\r\n                            <Slider\r\n                                defaultValue={level}\r\n                                min={100}\r\n                                max={900}\r\n                                step={100}\r\n                                onAfterChange={changeLevel}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <div className={classes.selectContainer}>\r\n                    <Select value={format} onChange={this.handleFormatChange}>\r\n                        <MenuItem value=\"hex\">HEX - #ffffff</MenuItem>\r\n                        <MenuItem value=\"rgb\">RGB - rgb(255,255,255)</MenuItem>\r\n                        <MenuItem value=\"rgba\">\r\n                            RGBA - rgba(255,255,255, 1.0)\r\n                        </MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n                    open={this.state.open}\r\n                    autoHideDuration={3000}\r\n                    message={\r\n                        <span id=\"message-id\">\r\n                            Format Changed To {format.toUpperCase()}\r\n                        </span>\r\n                    }\r\n                    ContentProps={{\r\n                        'aria-describedby': 'message-id'\r\n                    }}\r\n                    onClose={this.closeSnackbar}\r\n                    action={[\r\n                        <IconButton\r\n                            onClick={this.closeSnackbar}\r\n                            color=\"inherit\"\r\n                            key=\"close\"\r\n                            aria-label=\"close\"\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    ]}\r\n                />\r\n            </header>\r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles)(Navbar);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport styles from '../styles/PaletteFooterStyles';\r\n\r\nconst PaletteFooter = props => {\r\n    const { paletteName, emoji, classes } = props;\r\n\r\n    return (\r\n        <footer className={classes.PaletteFooter}>\r\n            <span>\r\n                <em>\r\n                    <small>Current palette</small>\r\n                </em>{' '}\r\n                : <strong style={{ color: 'red' }}>{paletteName}</strong>\r\n            </span>\r\n            <span className={classes.emoji}>{emoji}</span>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(PaletteFooter);\r\n","export default {\r\n    PaletteFooter: {\r\n        backgroundColor: 'white',\r\n        height: '5vh',\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center',\r\n        fontWeight: 'bold'\r\n    },\r\n    emoji: {\r\n        fontSize: '1.5rem',\r\n        margin: '0 1rem'\r\n    }\r\n};\r\n","import sizes from './sizes';\r\nexport default {\r\n    Palette: {\r\n        height: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflow: 'hidden'\r\n    },\r\n    colors: {\r\n        height: '90%'\r\n    },\r\n    goBack: {\r\n        width: '20%',\r\n        height: '50%',\r\n        margin: '0 auto',\r\n        display: 'inline-block',\r\n        position: 'relative',\r\n        cursor: 'pointer',\r\n        marginBottom: '-3.5px',\r\n        opacity: 1,\r\n        backgroundColor: 'black',\r\n        '& a': {\r\n            color: 'white',\r\n            width: '100px',\r\n            height: '30px',\r\n            position: 'absolute',\r\n            display: 'inline-block',\r\n            top: '50%',\r\n            left: '50%',\r\n            marginLeft: '-50px',\r\n            marginTop: '-15px',\r\n            textAlign: 'center',\r\n            outline: 'none',\r\n            background: 'rgba(255, 255, 255, 0.3)',\r\n            fontSize: '1rem',\r\n            lineHeight: '30px',\r\n            textTransform: 'uppercase',\r\n            border: 'none',\r\n            textDecoration: 'none'\r\n        },\r\n        [sizes.down('lg')]: {\r\n            width: '25%',\r\n            height: '33.3333%'\r\n        },\r\n        [sizes.down('md')]: {\r\n            width: '50%',\r\n            height: '20%'\r\n        },\r\n        [sizes.down('xs')]: {\r\n            width: '100%',\r\n            height: '10%'\r\n        }\r\n    }\r\n};\r\n","import React, { Component } from 'react';\r\nimport ColorBox from './ColorBox';\r\nimport Navbar from './Navbar';\r\nimport PaletteFooter from './PaletteFooter';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport styles from '../styles/PaletteStyles';\r\n\r\nclass Palette extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            level: 500,\r\n            format: 'hex'\r\n        };\r\n    }\r\n\r\n    changeLevel = level => {\r\n        this.setState({ level });\r\n    };\r\n\r\n    changeFormat = value => {\r\n        this.setState({ format: value });\r\n    };\r\n\r\n    render() {\r\n        const { colors, paletteName, emoji, id } = this.props.palette;\r\n        const { classes } = this.props;\r\n        const { level, format } = this.state;\r\n\r\n        const colorBoxes = colors[level].map((color, i) => (\r\n            <ColorBox\r\n                background={color[format]}\r\n                name={color.name}\r\n                key={color.id}\r\n                id={color.id}\r\n                paletteId={id}\r\n                moreUrl={`/palette/${id}/${color.id}`}\r\n                showingFullPalette={true}\r\n            />\r\n        ));\r\n\r\n        return (\r\n            <div className={classes.Palette}>\r\n                <Navbar\r\n                    level={level}\r\n                    changeLevel={this.changeLevel}\r\n                    handleChange={this.changeFormat}\r\n                    showingAllColors\r\n                />\r\n                <div className={classes.colors}>{colorBoxes}</div>\r\n                <PaletteFooter paletteName={paletteName} emoji={emoji} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Palette);\r\n","const styles = {\r\n    root: {\r\n        backgroundColor: 'white',\r\n        borderRadius: '5px',\r\n        padding: '0.5rem',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        border: '1px solid black',\r\n        cursor: 'pointer',\r\n        '&:hover': {},\r\n        '&:hover svg': {\r\n            cursor: 'pointer',\r\n            opacity: '1'\r\n        }\r\n    },\r\n    colors: {\r\n        backgroundColor: '#dae1e3',\r\n        height: '150px',\r\n        width: '100%',\r\n        borderRadius: '5px'\r\n    },\r\n    title: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        color: 'black',\r\n        paddingTop: '0.5rem',\r\n        margin: '0',\r\n        // fontSize: '1rem',\r\n        position: 'relative'\r\n    },\r\n    emoji: {\r\n        marginLeft: '0.5rem',\r\n        fontSize: '1.5rem'\r\n    },\r\n    miniColor: {\r\n        height: '25%',\r\n        width: '20%',\r\n        display: 'inline-block',\r\n        margin: '0 auto',\r\n        position: 'relative',\r\n        marginBottom: '-3.5px'\r\n    },\r\n    delete: {\r\n        position: 'relative'\r\n    },\r\n    deleteIcon: {\r\n        color: 'white',\r\n        backgroundColor: '#eb3d30',\r\n        width: '30px',\r\n        height: '30px',\r\n        position: 'absolute',\r\n        right: '0',\r\n        top: '0',\r\n        padding: '5px',\r\n        zIndex: 10,\r\n        opacity: 0,\r\n        transition: 'all 0.3s ease-in-out'\r\n    }\r\n};\r\n\r\nexport default styles;\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport styles from '../styles/MiniPaletteStyles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nclass MiniPalette extends Component {\r\n    deletePalette = event => {\r\n        event.stopPropagation();\r\n        this.props.deletePalette(this.props.id);\r\n    };\r\n\r\n    render() {\r\n        const { classes, paletteName, emoji, colors, handleClick } = this.props;\r\n\r\n        const miniColorBoxes = colors.map(color => (\r\n            <div\r\n                className={classes.miniColor}\r\n                style={{ backgroundColor: color.color }}\r\n                key={color.name}\r\n            ></div>\r\n        ));\r\n\r\n        return (\r\n            <div className={classes.root} onClick={handleClick}>\r\n                <DeleteIcon\r\n                    className={classes.deleteIcon}\r\n                    onClick={e => this.deletePalette(e)}\r\n                />\r\n\r\n                <div className={classes.colors}>{miniColorBoxes}</div>\r\n                <h5 className={classes.title}>\r\n                    {paletteName} <span className={classes.emoji}>{emoji}</span>\r\n                </h5>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(MiniPalette);\r\n","import sizes from './sizes';\r\nimport bg from './bg.svg';\r\nexport default {\r\n    '@global': {\r\n        '.fade-exit': {\r\n            opacity: 1\r\n        },\r\n        '.fade-exit-active': {\r\n            opacity: 0,\r\n            transition: 'opacity 500ms ease-out'\r\n        }\r\n    },\r\n    root: {\r\n        height: '100vh',\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        /* background by SVGBackgrounds.com */\r\n        backgroundColor: '#394bad',\r\n        backgroundImage: `url(${bg})`,\r\n        overflow: 'scroll'\r\n    },\r\n    heading: {\r\n        fontSize: '2rem'\r\n    },\r\n    container: {\r\n        width: '50%',\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n        flexDirection: 'column',\r\n        flexWrap: 'wrap',\r\n        [sizes.down('xl')]: {\r\n            width: '80%'\r\n        },\r\n        [sizes.down('xs')]: {\r\n            width: '75%'\r\n        }\r\n    },\r\n    nav: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        color: 'white',\r\n        '& a': {\r\n            color: 'white'\r\n        }\r\n    },\r\n    palettes: {\r\n        boxSizing: 'border-box',\r\n        width: '100%',\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(3, 30%)',\r\n        gridGap: '2.5rem',\r\n        [sizes.down('md')]: {\r\n            gridTemplateColumns: 'repeat(2, 50%)'\r\n        },\r\n        [sizes.down('xs')]: {\r\n            gridTemplateColumns: 'repeat(1, 100%)',\r\n            gridGap: '1.4rem'\r\n        }\r\n    }\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MiniPalette from './MiniPalette';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport styles from '../styles/PaletteListStyles';\r\n\r\nclass PaletteList extends Component {\r\n    goToPalette = id => {\r\n        this.props.history.push(`/palette/${id}`);\r\n    };\r\n\r\n    render() {\r\n        const { palettes, classes, deletePalette } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <div className={classes.container}>\r\n                    <nav className={classes.nav}>\r\n                        <h1>React Colors</h1>\r\n                        <Link to=\"/palette/new\">Create palette</Link>\r\n                    </nav>\r\n                    <div className={classes.palettes}>\r\n                        {palettes\r\n                            .map(palette => (\r\n                                <MiniPalette\r\n                                    key={palette.id}\r\n                                    {...palette}\r\n                                    deletePalette={deletePalette}\r\n                                    handleClick={() =>\r\n                                        this.goToPalette(palette.id)\r\n                                    }\r\n                                />\r\n                            ))\r\n                            .reverse()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(PaletteList);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport Navbar from './Navbar';\r\nimport ColorBox from './ColorBox';\r\nimport PaletteFooter from './PaletteFooter';\r\nimport styles from '../styles/PaletteStyles';\r\n\r\nclass SingleColorPalette extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this._shades = this.gatherShades(\r\n            this.props.palette,\r\n            this.props.colorId\r\n        );\r\n        this.state = { format: 'hex' };\r\n        this.changeFormat = this.changeFormat.bind(this);\r\n    }\r\n    gatherShades(palette, colorToFilterBy) {\r\n        let shades = [];\r\n        let allColors = palette.colors;\r\n\r\n        for (let key in allColors) {\r\n            shades = shades.concat(\r\n                allColors[key].filter(color => color.id === colorToFilterBy)\r\n            );\r\n        }\r\n        return shades.slice(1);\r\n    }\r\n    changeFormat(val) {\r\n        this.setState({ format: val });\r\n    }\r\n    render() {\r\n        const { format } = this.state;\r\n        const { paletteName, emoji, id } = this.props.palette;\r\n        const { classes } = this.props;\r\n        const colorBoxes = this._shades.map(color => (\r\n            <ColorBox\r\n                key={color.name}\r\n                name={color.name}\r\n                background={color[format]}\r\n                showingFullPalette={false}\r\n            />\r\n        ));\r\n        return (\r\n            <div className={classes.Palette}>\r\n                <Navbar\r\n                    handleChange={this.changeFormat}\r\n                    showingAllColors={false}\r\n                />\r\n                <div className={classes.colors}>\r\n                    {colorBoxes}\r\n                    <div className={classes.goBack}>\r\n                        <Link to={`/palette/${id}`}>GO BACK</Link>\r\n                    </div>\r\n                </div>\r\n                <PaletteFooter paletteName={paletteName} emoji={emoji} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles)(SingleColorPalette);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { Picker } from 'emoji-mart';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\n\r\nclass PaletteMetaForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stage: 'form',\r\n            newPaletteName: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        ValidatorForm.addValidationRule('isPaletteNameUnique', value =>\r\n            this.props.palettes.every(\r\n                ({ paletteName }) =>\r\n                    paletteName.toLowerCase() !== value.toLowerCase()\r\n            )\r\n        );\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    showEmojiPicker = () => {\r\n        this.setState({ stage: 'emoji' });\r\n    };\r\n\r\n    savePalette = emoji => {\r\n        const newPalette = {\r\n            paletteName: this.state.newPaletteName,\r\n            emoji: emoji.native\r\n        };\r\n\r\n        this.props.handleSubmit(newPalette);\r\n        this.setState({ stage: '' });\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n        const { newPaletteName, stage } = this.state;\r\n        const { hideForm } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Dialog open={stage === 'emoji'} onClose={hideForm}>\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        Choose a Palette Emoji\r\n                    </DialogTitle>\r\n                    <Picker\r\n                        title=\"Pick a Palette Emoji\"\r\n                        onSelect={this.savePalette}\r\n                    />\r\n                </Dialog>\r\n                <Dialog\r\n                    open={stage === 'form'}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                    onClose={hideForm}\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        Choose a Palette Name\r\n                    </DialogTitle>\r\n                    <ValidatorForm onSubmit={this.showEmojiPicker}>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                Please enter a name for your new beautiful\r\n                                palette. Make sure it's unique!\r\n                            </DialogContentText>\r\n                            <TextValidator\r\n                                label=\"Palette Name\"\r\n                                value={newPaletteName}\r\n                                name=\"newPaletteName\"\r\n                                onChange={this.handleChange}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                validators={['required', 'isPaletteNameUnique']}\r\n                                errorMessages={[\r\n                                    'Enter Palette Name',\r\n                                    'Name already used'\r\n                                ]}\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={hideForm} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Save Palette\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </ValidatorForm>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default PaletteMetaForm;\r\n","import { DRAWER_WIDTH } from '../constants';\r\nimport sizes from './sizes';\r\n\r\nconst drawerWidth = DRAWER_WIDTH;\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex'\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen\r\n        }),\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        height: '64px'\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen\r\n        })\r\n    },\r\n    menuButton: {\r\n        marginLeft: 12,\r\n        marginRight: 20\r\n    },\r\n    navBtns: {\r\n        marginRight: '1rem',\r\n        '& a': {\r\n            textDecoration: 'none'\r\n        },\r\n        [sizes.down('md')]: {\r\n            marginRight: '0.5rem',\r\n            width: '100% !important',\r\n            border: '1px solid black'\r\n        },\r\n\r\n        [sizes.down('xs')]: {\r\n            marginRight: '0.5rem',\r\n            width: '100%'\r\n        }\r\n    },\r\n    button: {\r\n        margin: '0 0.5rem',\r\n        [sizes.down('xs')]: {\r\n            margin: '0 0.2rem',\r\n            padding: '0.3rem'\r\n        }\r\n    }\r\n});\r\n\r\nexport default styles;\r\n","export const DRAWER_WIDTH = 400;\r\n","import React, { Component } from 'react';\r\nimport clsx from 'clsx';\r\nimport { Link } from 'react-router-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PaletteMetaForm from './PaletteMetaForm';\r\nimport styles from '../styles/PaletteFormNavStyles';\r\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\r\n\r\nclass PaletteFormNav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            newPaletteName: '',\r\n            formShowing: false\r\n        };\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    showForm = () => this.setState({ formShowing: true });\r\n\r\n    hideForm = () => this.setState({ formShowing: false });\r\n\r\n    render() {\r\n        const { classes, open, palettes, handleSubmit } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar\r\n                    color=\"default\"\r\n                    position=\"fixed\"\r\n                    className={clsx(classes.appBar, {\r\n                        [classes.appBarShift]: open\r\n                    })}\r\n                >\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={this.props.handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(classes.menuButton, {\r\n                                [classes.hide]: open\r\n                            })}\r\n                        >\r\n                            <AddToPhotosIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            Create Palette\r\n                        </Typography>\r\n                    </Toolbar>\r\n                    <div className={classes.navBtns}>\r\n                        <Link to=\"/\">\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                Go back\r\n                            </Button>\r\n                        </Link>\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.showForm}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </div>\r\n                </AppBar>\r\n                {this.state.formShowing && (\r\n                    <PaletteMetaForm\r\n                        palettes={palettes}\r\n                        handleSubmit={newPalette => handleSubmit(newPalette)}\r\n                        hideForm={this.hideForm}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(PaletteFormNav);\r\n","import sizes from './sizes';\r\nimport chroma from 'chroma-js';\r\n\r\nconst styles = {\r\n    root: {\r\n        width: '20%',\r\n        height: '25%',\r\n        margin: '0 auto',\r\n        display: 'inline-block',\r\n        position: 'relative',\r\n        cursor: 'pointer',\r\n        marginBottom: '-3.5px',\r\n        '&:hover svg': {\r\n            color: 'white',\r\n            transform: 'scale(1.5)'\r\n        },\r\n        [sizes.down('lg')]: {\r\n            width: '25%',\r\n            height: '20%'\r\n        },\r\n        [sizes.down('md')]: {\r\n            width: '50%',\r\n            height: '10%'\r\n        },\r\n        [sizes.down('sm')]: {\r\n            width: '100%',\r\n            height: '10%'\r\n        }\r\n    },\r\n    boxContent: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        left: '0px',\r\n        bottom: '0px',\r\n        padding: '10px',\r\n        color: props =>\r\n            chroma(props.color).luminance() <= 0.08\r\n                ? 'rgba(255,255,255,0.8)'\r\n                : 'rgba(0,0,0,0.6)',\r\n        letterSpacing: '1px',\r\n        textTransform: 'uppercase',\r\n        fontSize: '12px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        [sizes.down('sm')]: {\r\n            position: 'static',\r\n            height: '100%'\r\n        }\r\n    },\r\n    deleteIcon: {\r\n        transition: 'all 0.3s ease-in-out'\r\n    }\r\n};\r\n\r\nexport default styles;\r\n","import React from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { SortableElement } from 'react-sortable-hoc';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport styles from '../styles/DraggableColorBoxStyles';\r\n\r\nconst DraggableColorBox = SortableElement(props => {\r\n    let { classes, handleClick, name, color } = props;\r\n\r\n    return (\r\n        <div className={classes.root} style={{ backgroundColor: color }}>\r\n            <div className={classes.boxContent}>\r\n                <span>{name}</span>\r\n                <DeleteIcon\r\n                    className={classes.deleteIcon}\r\n                    onClick={() => handleClick(name)}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default withStyles(styles)(DraggableColorBox);\r\n","import React from 'react';\r\nimport DraggableColorBox from './DraggableColorBox';\r\nimport { SortableContainer } from 'react-sortable-hoc';\r\n\r\nconst DraggableColorList = SortableContainer(({ colors, removeColor }) => {\r\n    return (\r\n        <div style={{ height: '100%' }}>\r\n            {colors.map((color, index) => (\r\n                <DraggableColorBox\r\n                    key={color.name}\r\n                    handleClick={name => removeColor(name)}\r\n                    color={color.color}\r\n                    name={color.name}\r\n                    index={index}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default DraggableColorList;\r\n","import React, { Component } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { Button } from '@material-ui/core';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from '../styles/ColorPickerFormStyles';\r\n\r\nclass ColorPickerForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentColor: 'orange',\r\n            newColorName: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        ValidatorForm.addValidationRule('isColorNameUnique', value => {\r\n            let hasName = this.props.colors.every(\r\n                ({ name }) => name.toLowerCase() !== value.toLowerCase()\r\n            );\r\n\r\n            let hasColor = this.props.colors.every(\r\n                ({ color }) => color !== this.state.currentColor\r\n            );\r\n\r\n            return hasName && hasColor ? true : false;\r\n        });\r\n    }\r\n\r\n    updateCurrentColor = newColor => {\r\n        this.setState({ currentColor: newColor.hex });\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        const newColor = {\r\n            color: this.state.currentColor,\r\n            name: this.state.newColorName\r\n        };\r\n\r\n        this.props.addNewColor(newColor);\r\n        this.setState({ newColorName: '' });\r\n    };\r\n\r\n    render() {\r\n        const { paletteIsFull, classes } = this.props;\r\n        const { currentColor, newColorName } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <ChromePicker\r\n                    className={classes.picker}\r\n                    color={currentColor}\r\n                    onChangeComplete={newColor =>\r\n                        this.updateCurrentColor(newColor)\r\n                    }\r\n                />\r\n                <ValidatorForm\r\n                    onSubmit={this.handleSubmit}\r\n                    onError={errors => console.log('on error: ', errors)}\r\n                    ref=\"form\"\r\n                >\r\n                    <TextValidator\r\n                        className={classes.colorNameInput}\r\n                        placeholder=\"Color name\"\r\n                        variant=\"filled\"\r\n                        type=\"text\"\r\n                        margin=\"normal\"\r\n                        value={newColorName}\r\n                        onChange={this.handleChange}\r\n                        name=\"newColorName\"\r\n                        validators={['required', 'isColorNameUnique']}\r\n                        errorMessages={[\r\n                            'this field is required',\r\n                            'Color or name already used!'\r\n                        ]}\r\n                    />\r\n                    <Button\r\n                        className={classes.addColor}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{\r\n                            backgroundColor: paletteIsFull\r\n                                ? 'grey'\r\n                                : currentColor\r\n                        }}\r\n                        type=\"submit\"\r\n                        disabled={paletteIsFull}\r\n                    >\r\n                        {paletteIsFull ? 'Palette Full' : 'Add color'}\r\n                    </Button>\r\n                </ValidatorForm>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ColorPickerForm);\r\n","export default {\r\n    picker: {\r\n        width: '100% !important',\r\n        marginTop: '2rem'\r\n    },\r\n    addColor: {\r\n        width: '100%',\r\n        // padding: '1rem',\r\n        marginTop: '1rem'\r\n        // fontSize: '2rem'\r\n        // textTransform: 'none'\r\n    },\r\n    colorNameInput: {\r\n        width: '100%',\r\n        height: '70px'\r\n    }\r\n};\r\n","import { DRAWER_WIDTH } from '../constants';\r\n\r\nconst drawerWidth = DRAWER_WIDTH;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex'\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n        width: '100%'\r\n    },\r\n    content: {\r\n        height: 'calc(100vh - 64px)',\r\n        flexGrow: 1,\r\n        padding: theme.spacing(0),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen\r\n        }),\r\n        marginLeft: -drawerWidth\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen\r\n        }),\r\n        marginLeft: 0\r\n    },\r\n    container: {\r\n        width: '90%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        margin: '0 auto',\r\n        height: '100%'\r\n    },\r\n    buttons: {\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        width: '50%'\r\n    }\r\n});\r\n\r\nexport default styles;\r\n","import React, { Component } from 'react';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PaletteFormNav from './PaletteFormNav';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { Button } from '@material-ui/core';\r\nimport DraggableColorList from './DraggableColorList';\r\nimport ColorPickerForm from './ColorPickerForm';\r\nimport { arrayMove } from 'react-sortable-hoc';\r\nimport styles from '../styles/NewPaletteFormStyles';\r\n\r\nclass NewPaletteForm extends Component {\r\n    static defaultProps = {\r\n        maxColors: 20\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: true,\r\n            currentColor: 'tomato',\r\n            colors: this.props.palettes[0].colors,\r\n\r\n            newPaletteName: ''\r\n        };\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    addNewColor = newColor => {\r\n        this.setState({\r\n            colors: [...this.state.colors, newColor],\r\n            newColorName: ''\r\n        });\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    clearColors = () => this.setState({ colors: [] });\r\n\r\n    addRandomColor = () => {\r\n        const allColors = this.props.palettes.map(p => p.colors).flat();\r\n        const rand = Math.floor(Math.random() * allColors.length);\r\n        const randomColor = allColors[rand];\r\n\r\n        this.setState({ colors: [...this.state.colors, randomColor] });\r\n    };\r\n\r\n    handleSubmit = newPalette => {\r\n        newPalette.id = newPalette.paletteName.toLowerCase().replace(/ /g, '-');\r\n        newPalette.colors = this.state.colors;\r\n\r\n        this.props.savePalette(newPalette);\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    removeColor = colorName => {\r\n        this.setState({\r\n            colors: this.state.colors.filter(color => color.name !== colorName)\r\n        });\r\n    };\r\n\r\n    onSortEnd = ({ oldIndex, newIndex }) => {\r\n        this.setState(({ colors }) => ({\r\n            colors: arrayMove(colors, oldIndex, newIndex)\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        const { classes, maxColors, palettes } = this.props;\r\n        const { open, colors } = this.state;\r\n        const paletteIsFull = colors.length >= maxColors;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <PaletteFormNav\r\n                    open={open}\r\n                    palettes={palettes}\r\n                    handleSubmit={this.handleSubmit}\r\n                    handleDrawerOpen={this.handleDrawerOpen}\r\n                />\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={this.handleDrawerClose}>\r\n                            <ChevronLeftIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <div className={classes.container}>\r\n                        <Typography variant=\"h4\" gutterBottom>\r\n                            Design your palette\r\n                        </Typography>\r\n                        <div className={classes.buttons}>\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                onClick={this.clearColors}\r\n                            >\r\n                                Clear palette\r\n                            </Button>\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={this.addRandomColor}\r\n                                disabled={paletteIsFull}\r\n                            >\r\n                                Random color\r\n                            </Button>\r\n                        </div>\r\n                        <ColorPickerForm\r\n                            colors={colors}\r\n                            paletteIsFull={paletteIsFull}\r\n                            addNewColor={this.addNewColor}\r\n                        />\r\n                    </div>\r\n                </Drawer>\r\n                <main\r\n                    className={clsx(classes.content, {\r\n                        [classes.contentShift]: open\r\n                    })}\r\n                >\r\n                    <div className={classes.drawerHeader} />\r\n                    <DraggableColorList\r\n                        colors={colors}\r\n                        removeColor={this.removeColor}\r\n                        axis=\"xy\"\r\n                        onSortEnd={this.onSortEnd}\r\n                    />\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm);\r\n","export default [\r\n    {\r\n        paletteName: 'Material UI Colors',\r\n        id: 'material-ui-colors',\r\n        emoji: '🎨',\r\n        colors: [\r\n            { name: 'red', color: '#F44336' },\r\n            { name: 'pink', color: '#E91E63' },\r\n            { name: 'purple', color: '#9C27B0' },\r\n            { name: 'deeppurple', color: '#673AB7' },\r\n            { name: 'indigo', color: '#3F51B5' },\r\n            { name: 'blue', color: '#2196F3' },\r\n            { name: 'lightblue', color: '#03A9F4' },\r\n            { name: 'cyan', color: '#00BCD4' },\r\n            { name: 'teal', color: '#009688' },\r\n            { name: 'green', color: '#4CAF50' },\r\n            { name: 'lightgreen', color: '#8BC34A' },\r\n            { name: 'lime', color: '#CDDC39' },\r\n            { name: 'yellow', color: '#FFEB3B' },\r\n            { name: 'amber', color: '#FFC107' },\r\n            { name: 'orange', color: '#FF9800' },\r\n            { name: 'deeporange', color: '#FF5722' },\r\n            { name: 'brown', color: '#795548' },\r\n            { name: 'grey', color: '#9E9E9E' },\r\n            { name: 'bluegrey', color: '#607D8B' }\r\n        ]\r\n    },\r\n    {\r\n        paletteName: 'Flat UI Colors v1',\r\n        id: 'flat-ui-colors-v1',\r\n        emoji: '🤙',\r\n        colors: [\r\n            { name: 'Turquoise', color: '#1abc9c' },\r\n            { name: 'Emerald', color: '#2ecc71' },\r\n            { name: 'PeterRiver', color: '#3498db' },\r\n            { name: 'Amethyst', color: '#9b59b6' },\r\n            { name: 'WetAsphalt', color: '#34495e' },\r\n            { name: 'GreenSea', color: '#16a085' },\r\n            { name: 'Nephritis', color: '#27ae60' },\r\n            { name: 'BelizeHole', color: '#2980b9' },\r\n            { name: 'Wisteria', color: '#8e44ad' },\r\n            { name: 'MidnightBlue', color: '#2c3e50' },\r\n            { name: 'SunFlower', color: '#f1c40f' },\r\n            { name: 'Carrot', color: '#e67e22' },\r\n            { name: 'Alizarin', color: '#e74c3c' },\r\n            { name: 'Clouds', color: '#ecf0f1' },\r\n            { name: 'Concrete', color: '#95a5a6' },\r\n            { name: 'Orange', color: '#f39c12' },\r\n            { name: 'Pumpkin', color: '#d35400' },\r\n            { name: 'Pomegranate', color: '#c0392b' },\r\n            { name: 'Silver', color: '#bdc3c7' },\r\n            { name: 'Asbestos', color: '#7f8c8d' }\r\n        ]\r\n    },\r\n    {\r\n        paletteName: 'Flat UI Colors Dutch',\r\n        id: 'flat-ui-colors-dutch',\r\n        emoji: '🇳🇱',\r\n        colors: [\r\n            { name: 'Sunflower', color: '#FFC312' },\r\n            { name: 'Energos', color: '#C4E538' },\r\n            { name: 'BlueMartina', color: '#12CBC4' },\r\n            { name: 'LavenderRose', color: '#FDA7DF' },\r\n            { name: 'BaraRose', color: '#ED4C67' },\r\n            { name: 'RadiantYellow', color: '#F79F1F' },\r\n            { name: 'AndroidGreen', color: '#A3CB38' },\r\n            { name: 'MediterraneanSea', color: '#1289A7' },\r\n            { name: 'LavenderTea', color: '#D980FA' },\r\n            { name: 'VerryBerry', color: '#B53471' },\r\n            { name: 'PuffinsBill', color: '#EE5A24' },\r\n            { name: 'PixelatedGrass', color: '#009432' },\r\n            { name: 'MerchantMarineBlue', color: '#0652DD' },\r\n            { name: 'ForgottenPurple', color: '#9980FA' },\r\n            { name: 'HollyHock', color: '#833471' },\r\n            { name: 'RedPigment', color: '#EA2027' },\r\n            { name: 'TurkishAqua', color: '#006266' },\r\n            { name: '20000LeaguesUnderTheSea', color: '#1B1464' },\r\n            { name: 'CircumorbitalRing', color: '#5758BB' },\r\n            { name: 'MagentaPurple', color: '#6F1E51' }\r\n        ]\r\n    },\r\n    {\r\n        paletteName: 'Flat UI Colors American',\r\n        id: 'flat-ui-colors-american',\r\n        emoji: '🐱',\r\n        colors: [\r\n            { name: 'LightGreenishBlue', color: '#55efc4' },\r\n            { name: 'FadedPoster', color: '#81ecec' },\r\n            { name: 'GreenDarnerTail', color: '#74b9ff' },\r\n            { name: 'ShyMoment', color: '#a29bfe' },\r\n            { name: 'CityLights', color: '#dfe6e9' },\r\n            { name: 'MintLeaf', color: '#00b894' },\r\n            { name: 'RobinsEggBlue', color: '#00cec9' },\r\n            { name: 'ElectronBlue', color: '#0984e3' },\r\n            { name: 'ExodusFruit', color: '#6c5ce7' },\r\n            { name: 'SoothingBreeze', color: '#b2bec3' },\r\n            { name: 'SourLemon', color: '#ffeaa7' },\r\n            { name: 'FirstDate', color: '#fab1a0' },\r\n            { name: 'PinkGlamour', color: '#ff7675' },\r\n            { name: 'Pico8Pink', color: '#fd79a8' },\r\n            { name: 'AmericanRiver', color: '#636e72' },\r\n            { name: 'BrightYarrow', color: '#fdcb6e' },\r\n            { name: 'OrangeVille', color: '#e17055' },\r\n            { name: 'Chi-Gong', color: '#d63031' },\r\n            { name: 'PrunusAvium', color: '#e84393' },\r\n            { name: 'DraculaOrchid', color: '#2d3436' }\r\n        ]\r\n    },\r\n    {\r\n        paletteName: 'Flat UI Colors Aussie',\r\n        id: 'flat-ui-colors-aussie',\r\n        emoji: '🤘',\r\n        colors: [\r\n            { name: 'Beekeeper', color: '#f6e58d' },\r\n            { name: 'SpicedNectarine', color: '#ffbe76' },\r\n            { name: 'PinkGlamour', color: '#ff7979' },\r\n            { name: 'JuneBud', color: '#badc58' },\r\n            { name: 'CoastalBreeze', color: '#dff9fb' },\r\n            { name: 'Turbo', color: '#f9ca24' },\r\n            { name: 'QuinceJelly', color: '#f0932b' },\r\n            { name: 'CarminePink', color: '#eb4d4b' },\r\n            { name: 'PureApple', color: '#6ab04c' },\r\n            { name: 'HintOfIcePack', color: '#c7ecee' },\r\n            { name: 'MiddleBlue', color: '#7ed6df' },\r\n            { name: 'Heliotrope', color: '#e056fd' },\r\n            { name: 'ExodusFruit', color: '#686de0' },\r\n            { name: 'DeepKoamaru', color: '#30336b' },\r\n            { name: 'SoaringEagle', color: '#95afc0' },\r\n            { name: 'GreenlandGreen', color: '#22a6b3' },\r\n            { name: 'SteelPink', color: '#be2edd' },\r\n            { name: 'Blurple', color: '#4834d4' },\r\n            { name: 'DeepCove', color: '#130f40' },\r\n            { name: 'WizardGrey', color: '#535c68' }\r\n        ]\r\n    },\r\n    {\r\n        paletteName: 'Flat UI Colors British',\r\n        id: 'flat-ui-colors-british',\r\n        emoji: '🇬🇧',\r\n        colors: [\r\n            { name: 'ProtossPylon', color: '#00a8ff' },\r\n            { name: 'Periwinkle', color: '#9c88ff' },\r\n            { name: 'Rise-N-Shine', color: '#fbc531' },\r\n            { name: 'DownloadProgress', color: '#4cd137' },\r\n            { name: 'Seabrook', color: '#487eb0' },\r\n            { name: 'VanaDylBlue', color: '#0097e6' },\r\n            { name: 'MattPurple', color: '#8c7ae6' },\r\n            { name: 'NanohanachaGold', color: '#e1b12c' },\r\n            { name: 'SkirretGreen', color: '#44bd32' },\r\n            { name: 'Naval', color: '#40739e' },\r\n            { name: 'NasturcianFlower', color: '#e84118' },\r\n            { name: 'LynxWhite', color: '#f5f6fa' },\r\n            { name: 'BlueberrySoda', color: '#7f8fa6' },\r\n            { name: 'MazarineBlue', color: '#273c75' },\r\n            { name: 'BlueNights', color: '#353b48' },\r\n            { name: 'HarleyOrange', color: '#c23616' },\r\n            { name: 'HintOfPensive', color: '#dcdde1' },\r\n            { name: 'ChainGangGrey', color: '#718093' },\r\n            { name: 'PicoVoid', color: '#192a56' },\r\n            { name: 'ElectroMagnetic', color: '#2f3640' }\r\n        ]\r\n    },\r\n    {\r\n        paletteName: 'Flat UI Colors Spanish',\r\n        id: 'flat-ui-colors-spanish',\r\n        emoji: '🇪🇸',\r\n        colors: [\r\n            { name: 'JacksonsPurple', color: '#40407a' },\r\n            { name: 'C64Purple', color: '#706fd3' },\r\n            { name: 'SwanWhite', color: '#f7f1e3' },\r\n            { name: 'SummerSky', color: '#34ace0' },\r\n            { name: 'CelestialGreen', color: '#33d9b2' },\r\n            { name: 'LuckyPoint', color: '#2c2c54' },\r\n            { name: 'Liberty', color: '#474787' },\r\n            { name: 'HotStone', color: '#aaa69d' },\r\n            { name: 'DevilBlue', color: '#227093' },\r\n            { name: 'PalmSpringsSplash', color: '#218c74' },\r\n            { name: 'FlourescentRed', color: '#ff5252' },\r\n            { name: 'SyntheticPumpkin', color: '#ff793f' },\r\n            { name: 'CrocodileTooth', color: '#d1ccc0' },\r\n            { name: 'MandarinSorbet', color: '#ffb142' },\r\n            { name: 'SpicedButterNut', color: '#ffda79' },\r\n            { name: 'EyeOfNewt', color: '#b33939' },\r\n            { name: 'ChileanFire', color: '#cd6133' },\r\n            { name: 'GreyPorcelain', color: '#84817a' },\r\n            { name: 'AlamedaOchre', color: '#cc8e35' },\r\n            { name: 'Desert', color: '#ccae62' }\r\n        ]\r\n    },\r\n    {\r\n        paletteName: 'Flat UI Colors Indian',\r\n        id: 'flat-ui-colors-indian',\r\n        emoji: '🇮🇳',\r\n        colors: [\r\n            { name: 'OrchidOrange', color: '#FEA47F' },\r\n            { name: 'SpiroDiscoBall', color: '#25CCF7' },\r\n            { name: 'HoneyGlow', color: '#EAB543' },\r\n            { name: 'SweetGarden', color: '#55E6C1' },\r\n            { name: 'FallingStar', color: '#CAD3C8' },\r\n            { name: 'RichGardenia', color: '#F97F51' },\r\n            { name: 'ClearChill', color: '#1B9CFC' },\r\n            { name: 'WhitePepper', color: '#F8EFBA' },\r\n            { name: 'Keppel', color: '#58B19F' },\r\n            { name: 'ShipsOfficer', color: '#2C3A47' },\r\n            { name: 'FieryFuchsia', color: '#B33771' },\r\n            { name: 'BlueBell', color: '#3B3B98' },\r\n            { name: 'GeorgiaPeach', color: '#FD7272' },\r\n            { name: 'OasisStream', color: '#9AECDB' },\r\n            { name: 'BrightUbe', color: '#D6A2E8' },\r\n            { name: 'MagentaPurple', color: '#6D214F' },\r\n            { name: 'EndingNavyBlue', color: '#182C61' },\r\n            { name: 'SasquatchSocks', color: '#FC427B' },\r\n            { name: 'PineGlade', color: '#BDC581' },\r\n            { name: 'HighlighterLavender', color: '#82589F' }\r\n        ]\r\n    },\r\n    {\r\n        paletteName: 'Flat UI Colors French',\r\n        id: 'flat-ui-colors-french',\r\n        emoji: '🇫🇷',\r\n        colors: [\r\n            { name: 'FlatFlesh', color: '#fad390' },\r\n            { name: 'MelonMelody', color: '#f8c291' },\r\n            { name: 'Livid', color: '#6a89cc' },\r\n            { name: 'Spray', color: '#82ccdd' },\r\n            { name: 'ParadiseGreen', color: '#b8e994' },\r\n            { name: 'SquashBlossom', color: '#f6b93b' },\r\n            { name: 'MandarinRed', color: '#e55039' },\r\n            { name: 'AzraqBlue', color: '#4a69bd' },\r\n            { name: 'Dupain', color: '#60a3bc' },\r\n            { name: 'AuroraGreen', color: '#78e08f' },\r\n            { name: 'IcelandPoppy', color: '#fa983a' },\r\n            { name: 'TomatoRed', color: '#eb2f06' },\r\n            { name: 'YueGuangBlue', color: '#1e3799' },\r\n            { name: 'GoodSamaritan', color: '#3c6382' },\r\n            { name: 'Waterfall', color: '#38ada9' },\r\n            { name: 'CarrotOrange', color: '#e58e26' },\r\n            { name: 'JalapenoRed', color: '#b71540' },\r\n            { name: 'DarkSapphire', color: '#0c2461' },\r\n            { name: 'ForestBlues', color: '#0a3d62' },\r\n            { name: 'ReefEncounter', color: '#079992' }\r\n        ]\r\n    }\r\n];\r\n","import chroma from 'chroma-js';\r\n\r\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\r\n\r\nfunction generatePalette(starterPalette) {\r\n    let newPalette = {\r\n        paletteName: starterPalette.paletteName,\r\n        id: starterPalette.id,\r\n        emoji: starterPalette.emoji,\r\n        colors: {}\r\n    };\r\n\r\n    for (let level of levels) {\r\n        newPalette.colors[level] = [];\r\n    }\r\n\r\n    for (let color of starterPalette.colors) {\r\n        let scale = getScale(color.color, 10).reverse();\r\n\r\n        for (let i in scale) {\r\n            newPalette.colors[levels[i]].push({\r\n                name: `${color.name} ${levels[i]}`,\r\n                id: color.name.toLowerCase().replace(/ /g, '-'),\r\n                hex: scale[i],\r\n                rgb: chroma(scale[i]).css(),\r\n                rgba: chroma(scale[i])\r\n                    .css()\r\n                    .replace('rgb', 'rgba')\r\n                    .replace(')', ',1.0)')\r\n            });\r\n        }\r\n    }\r\n\r\n    return newPalette;\r\n}\r\n\r\nfunction getRange(hexColor) {\r\n    const end = '#fff';\r\n\r\n    return [\r\n        chroma(hexColor)\r\n            .darken(1.4)\r\n            .hex(),\r\n        hexColor,\r\n        end\r\n    ];\r\n}\r\n\r\nfunction getScale(hexColor, numberOfColors) {\r\n    return chroma\r\n        .scale(getRange(hexColor))\r\n        .mode('lab')\r\n        .colors(numberOfColors);\r\n}\r\n\r\nexport { generatePalette };\r\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Palette from './components/Palette';\nimport PaletteList from './components/PaletteList';\nimport SingleColorPalette from './components/SingleColorPalette';\nimport NewPaletteForm from './components/NewPaletteForm';\nimport seedColors from './seedColors';\nimport { generatePalette } from './colorHelpers';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        const savedPalettes = JSON.parse(localStorage.getItem('palettes'));\n\n        this.state = {\n            palettes: savedPalettes || seedColors\n        };\n    }\n\n    findPalette = id => {\n        return this.state.palettes.find(palette => palette.id === id);\n    };\n\n    deletePalette = id => {\n        this.setState(\n            st => ({\n                palettes: st.palettes.filter(palette => palette.id !== id)\n            }),\n            this.syncLocalStorage()\n        );\n    };\n\n    savePalette = newPalette => {\n        this.setState(\n            { palettes: [...this.state.palettes, newPalette] },\n            this.syncLocalStorage\n        );\n    };\n\n    syncLocalStorage = () => {\n        window.localStorage.setItem(\n            'palettes',\n            JSON.stringify(this.state.palettes)\n        );\n    };\n\n    render() {\n        return (\n            <Switch>\n                <Route\n                    exact\n                    path=\"/palette/new\"\n                    render={routeProps => (\n                        <NewPaletteForm\n                            {...routeProps}\n                            palettes={this.state.palettes}\n                            savePalette={this.savePalette}\n                        />\n                    )}\n                />\n                <Route\n                    path=\"/palette/:paletteId/:colorId\"\n                    render={routeProps => (\n                        <SingleColorPalette\n                            colorId={routeProps.match.params.colorId}\n                            palette={generatePalette(\n                                this.findPalette(\n                                    routeProps.match.params.paletteId\n                                )\n                            )}\n                        />\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/\"\n                    render={routeProps => (\n                        <PaletteList\n                            {...routeProps}\n                            palettes={this.state.palettes}\n                            deletePalette={this.deletePalette}\n                        />\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/palette/:id\"\n                    render={routeProps => (\n                        <Palette\n                            palette={generatePalette(\n                                this.findPalette(routeProps.match.params.id)\n                            )}\n                        />\n                    )}\n                />\n            </Switch>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}